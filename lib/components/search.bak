import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:resto/models/restaurant_list.dart';

class SearchDrawer extends SearchDelegate<String> {
  @override
  String get searchFieldLabel => 'Cari restoran';
  @override
  List<Widget> buildActions(BuildContext context) {
    return [IconButton(onPressed: () => query = '', icon: Icon(Icons.clear))];
  }

  @override
  Widget buildLeading(BuildContext context) {
    return IconButton(
      onPressed: () => Get.back(),
      icon: Icon(Icons.arrow_back),
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text('Menampilkan hasil pencarian resto $query'),
            Divider(),
            Expanded(
              child: FutureBuilder(
                future: DefaultAssetBundle.of(context)
                    .loadString('assets/local_restaurant.json'),
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    final List<Restaurant> suggest =
                        localRestoFromJson(snapshot.data)
                            .restaurants
                            .where((kueri) =>
                                kueri.name.toLowerCase().startsWith(query))
                            .toList();
                    return ListView.builder(
                      physics: BouncingScrollPhysics(),
                      itemCount: suggest.length,
                      itemBuilder: (context, index) {
                        return Card(
                          elevation: 1,
                          child: ListTile(
                              onTap: () => Get.toNamed('/restoDetail',
                                  arguments: suggest[index]),
                              subtitle: Text(suggest[index].city),
                              trailing: Column(
                                children: [
                                  Expanded(
                                    child: Row(
                                      mainAxisSize: MainAxisSize.min,
                                      children: [
                                        Icon(Icons.star, color: Colors.amber),
                                        Text(suggest[index].rating.toString())
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                              leading: CircleAvatar(
                                  backgroundImage:
                                      NetworkImage(suggest[index].pictureId)),
                              title: Text(
                                suggest[index].name,
                                style: TextStyle(fontWeight: FontWeight.bold),
                              )),
                        );
                      },
                    );
                  }
                  return CircularProgressIndicator();
                },
              ),
            )
          ],
        ),
      ),
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    return FutureBuilder(
      future: DefaultAssetBundle.of(context)
          .loadString('assets/local_restaurant.json'),
      builder: (context, snapshot) {
        if (snapshot.hasData) {
          final List<Restaurant> suggest = query.isEmpty
              ? localRestoFromJson(snapshot.data).restaurants.sublist(0, 3)
              : localRestoFromJson(snapshot.data)
                  .restaurants
                  .where((kueri) => kueri.name.toLowerCase().startsWith(query))
                  .toList();
          return ListView.builder(
            itemCount: suggest.length,
            itemBuilder: (context, index) {
              return ListTile(
                onTap: () =>
                    Get.toNamed('/restoDetail', arguments: suggest[index]),
                leading: Icon(Icons.location_city),
                title: RichText(
                  text: TextSpan(
                      text: suggest[index].name.substring(0, query.length),
                      style: TextStyle(
                          color: Colors.black, fontWeight: FontWeight.bold),
                      children: [
                        TextSpan(
                            text: suggest[index].name.substring(query.length),
                            style: TextStyle(color: Colors.grey))
                      ]),
                ),
              );
            },
          );
        }
        return CircularProgressIndicator();
      },
    );
  }
}
